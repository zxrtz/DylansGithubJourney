}
}
}
findDailyReturn(today)
noms <- gsub("\\$","Dollar",noms)
# require packages
require("stringr");require("data.table");require("BatchGetSymbols")
require("quantmod");require("dplyr");require("PerformanceAnalytics");require("pbapply")
library(timeDate)
library(RQuantLib)
library(xts)
library(zoo)
# SET WD AUTOMATICALLY
setwd("C:/Users/Dylan/Desktop/STONKS BACKTEST/new insdier project")
# Define the formatVOL function
formatVOL <- function(x) {
as.numeric(gsub(",", "", x))
}
# **********************************************************************************
#                INSIDER TRANSACTIONS IMPORTING
# **********************************************************************************
url <- "https://finviz.com/insidertrading.ashx"
TABLE <- read_html(url)
TABLE <- TABLE  %>%
html_nodes("table") %>%
.[[7]] %>%
html_table(header=TRUE,fill=TRUE)
noms <- names(TABLE)
noms <- gsub("#","Num",noms)
noms <- gsub("\\$","Dollar",noms)
noms <- gsub("\\(","",noms)
noms <- gsub("\\)","",noms)
noms <- gsub(" ","",noms)
colnames(TABLE) <- noms
TABLE$Date <- as.Date(as.character(TABLE$Date),format="%b %d")
TABLE$NumShares<- formatVOL(TABLE$NumShares)
TABLE$ValueDollar<- formatVOL(TABLE$ValueDollar)
TABLE$NumSharesTotal<- formatVOL(TABLE$NumSharesTotal)
TABLE$SECForm4 <- as.POSIXct(as.character(TABLE$SECForm4), format ="%b %d %I:%M %p")
require(QuantLib)
require(quantmod)
require(dplyr)
today <- Sys.Date()
yesterday <- Sys.Date() - 1
findDailyReturn <- function(date) {
TABLE$SECForm4 <- as.Date(TABLE$SECForm4)
TABLE$DailyReturn <- NA
for (i in (1:nrow(TABLE))) {
if ( (date ) %in% TABLE$SECForm4[i] && isBusinessDay("UnitedStates/NYSE", date )) {
symbol <- get(TABLE$Ticker[i])
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
return <- dailyReturn(symbol)
TABLE$DailyReturn[i] <- return
}
}
}
findDailyReturn(today)
require(QuantLib)
require(quantmod)
require(dplyr)
today <- Sys.Date()
yesterday <- Sys.Date() - 1
findDailyReturn <- function(date) {
TABLE$SECForm4 <- as.Date(TABLE$SECForm4)
TABLE$DailyReturn <- NA
for (i in (1:nrow(TABLE))) {
if ( (date ) %in% TABLE$SECForm4[i] && isBusinessDay("UnitedStates/NYSE", date )) {
symbol <- get(TABLE$Ticker[i])
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
return <- dailyReturn(symbol)
TABLE$DailyReturn[which[Ticker == "symbol"]] <- return
}
}
}
findDailyReturn(today)
require(QuantLib)
require(quantmod)
require(dplyr)
today <- Sys.Date()
yesterday <- Sys.Date() - 1
findDailyReturn <- function(date) {
TABLE$SECForm4 <- as.Date(TABLE$SECForm4)
TABLE$DailyReturn <- NA
for (i in (1:nrow(TABLE))) {
if ( (date ) %in% TABLE$SECForm4[i] && isBusinessDay("UnitedStates/NYSE", date )) {
symbol <- get(TABLE$Ticker[i])
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
return <- dailyReturn(symbol)
TABLE$DailyReturn[where[Ticker == "symbol"]] <- return
}
}
}
findDailyReturn(today)
require(QuantLib)
require(quantmod)
require(dplyr)
today <- Sys.Date()
yesterday <- Sys.Date() - 1
findDailyReturn <- function(date) {
TABLE$SECForm4 <- as.Date(TABLE$SECForm4)
TABLE$DailyReturn <- NA
for (i in (1:nrow(TABLE))) {
if ( (date ) %in% TABLE$SECForm4[i] && isBusinessDay("UnitedStates/NYSE", date )) {
symbol <- get(TABLE$Ticker[i])
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
return <- dailyReturn(symbol)
TABLE$DailyReturn[where(Ticker == "symbol")] <- return
}
}
}
findDailyReturn(today)
require(QuantLib)
require(quantmod)
require(dplyr)
today <- Sys.Date()
yesterday <- Sys.Date() - 1
findDailyReturn <- function(date) {
TABLE$SECForm4 <- as.Date(TABLE$SECForm4)
TABLE$DailyReturn <- NA
for (i in (1:nrow(TABLE))) {
if ( (date ) %in% TABLE$SECForm4[i] && isBusinessDay("UnitedStates/NYSE", date )) {
symbol <- get(TABLE$Ticker[i])
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
return <- dailyReturn(symbol)
TABLE$DailyReturn[i] <- return
}
}
}
findDailyReturn(today)
View(TABLE)
require(QuantLib)
require(quantmod)
require(dplyr)
today <- Sys.Date()
yesterday <- Sys.Date() - 1
findDailyReturn <- function(date) {
TABLE$SECForm4 <- as.Date(TABLE$SECForm4)
TABLE$DailyReturn <- NA
for (i in (1:nrow(TABLE))) {
if ( (date ) %in% TABLE$SECForm4[i] && isBusinessDay("UnitedStates/NYSE", date )) {
symbol <- get(TABLE$Ticker[i])
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
return <- dailyReturn(symbol)
TABLE$DailyReturn[i] <- return
}
}
}
findDailyReturn(today)
TABLE$SECForm4 <- as.Date(TABLE$SECForm4)
TABLE$DailyReturn <- NA
findDailyReturn(today)
findDailyReturn <- function(date) {
TABLE$SECForm4 <- as.Date(TABLE$SECForm4)
TABLE$DailyReturn <- NA
for (i in (1:nrow(TABLE))) {
if ( (date ) %in% TABLE$SECForm4[i] && isBusinessDay("UnitedStates/NYSE", date )) {
symbol <- get(TABLE$Ticker[i])
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
return <- dailyReturn(symbol)
TABLE$DailyReturn[i] <- return
}
}
}
findDailyReturn(today)
symbol <- get(TABLE$Ticker[i])
symbol <- get(TABLE$Ticker[i])
symbol <- get(TABLE$Ticker[i])
symbol <- get(TABLE$Ticker[i])
symbol <- get(TABLE$Ticker[i])
symbol <- get(TABLE$Ticker[5])
symbol <- get(TABLE$Ticker[5])
symbol <- get(TABLE$Ticker[5])
symbol <- get(TABLE$Ticker[5])
symbol <- get(TABLE$Ticker[5])
symbol <- get(TABLE$Ticker[5])
symbol <- get(TABLE$Ticker[5])
symbol <- get(TABLE$Ticker[5])
symbol <- get(TABLE$Ticker[5])
symbol <- get(TABLE$Ticker[5])
symbol <- TABLE$Ticker[i]
symbol <- TABLE$Ticker[5]
require(QuantLib)
require(quantmod)
require(dplyr)
today <- Sys.Date()
yesterday <- Sys.Date() - 1
findDailyReturn <- function(date) {
TABLE$SECForm4 <- as.Date(TABLE$SECForm4)
TABLE$DailyReturn <- NA
for (i in (1:nrow(TABLE))) {
if ( (date ) %in% TABLE$SECForm4[i] && isBusinessDay("UnitedStates/NYSE", date )) {
symbol <- TABLE$Ticker[i]
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
return <- dailyReturn(symbol)
TABLE$DailyReturn[i] <- return
}
}
}
findDailyReturn(today)
View(TABLE)
require(QuantLib)
require(quantmod)
require(dplyr)
today <- Sys.Date()
yesterday <- Sys.Date() - 1
findDailyReturn <- function(date) {
TABLE$SECForm4 <- as.Date(TABLE$SECForm4)
TABLE$DailyReturn <- NA
for (i in (1:nrow(TABLE))) {
if ( (date ) %in% TABLE$SECForm4[i] && isBusinessDay("UnitedStates/NYSE", date )) {
symbol <- TABLE$Ticker[i]
tryCatch({
getSymbols(symbol, src = "yahoo", from = date -2 , to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
return <- dailyReturn(symbol)
TABLE$DailyReturn[i] <- return
}
}
}
findDailyReturn(today)
require(QuantLib)
require(quantmod)
require(dplyr)
today <- Sys.Date()
yesterday <- Sys.Date() - 1
findDailyReturn <- function(date) {
TABLE$SECForm4 <- as.Date(TABLE$SECForm4)
TABLE$DailyReturn <- NA
for (i in (1:nrow(TABLE))) {
if ( (date ) %in% TABLE$SECForm4[i] && isBusinessDay("UnitedStates/NYSE", date )) {
symbol <- TABLE$Ticker[i]
tryCatch({
getSymbols(symbol, src = "yahoo", from = date -2 , to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
return <- dailyReturn(symbol)
TABLE$DailyReturn[i] <- return
}
}
}
findDailyReturn(today)
require(QuantLib)
require(quantmod)
require(dplyr)
today <- Sys.Date()
yesterday <- Sys.Date() - 1
findDailyReturn <- function(date) {
TABLE$SECForm4 <- as.Date(TABLE$SECForm4)
TABLE$DailyReturn <- NA
for (i in (1:nrow(TABLE))) {
if ( (date ) %in% TABLE$SECForm4[i] && isBusinessDay("UnitedStates/NYSE", date)) {
symbol <- TABLE$Ticker[i]
tryCatch({
getSymbols(symbol, src = "yahoo", from = date - 2 , to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
return <- dailyReturn(symbol)
TABLE$DailyReturn[i] <- return
}
}
}
findDailyReturn(today)
findDailyReturn <- function(date) {
TABLE$SECForm4 <- as.Date(TABLE$SECForm4)
TABLE$DailyReturn <- NA
for (i in (1:nrow(TABLE))) {
if ( (date ) %in% TABLE$SECForm4[i] && isBusinessDay("UnitedStates/NYSE", date)) {
symbol <- TABLE$Ticker[i]
tryCatch({
getSymbols(symbol, src = "yahoo", from = date - 2 , to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
return <- dailyReturn(symbol)
TABLE$DailyReturn[i] <- return
}
}
}
require(QuantLib)
require(quantmod)
require(dplyr)
today <- Sys.Date()
yesterday <- Sys.Date() - 1
findDailyReturn <- function(date) {
TABLE$SECForm4 <- as.Date(TABLE$SECForm4)
TABLE$DailyReturn <- NA
for (i in (1:nrow(TABLE))) {
if ( (date ) %in% TABLE$SECForm4[i] && isBusinessDay("UnitedStates/NYSE", date )) {
symbol <- TABLE$Ticker[i]
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
return <- dailyReturn(symbol)
TABLE$DailyReturn[i] <- return
}
}
}
findDailyReturn(today)
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
require(QuantLib)
require(quantmod)
require(dplyr)
today <- Sys.Date()
yesterday <- Sys.Date() - 1
findDailyReturn <- function(date) {
TABLE$SECForm4 <- as.Date(TABLE$SECForm4)
TABLE$DailyReturn <- NA
for (i in (1:nrow(TABLE))) {
if ( date %in% TABLE$SECForm4[i] && isBusinessDay("UnitedStates/NYSE", date)) {
symbol <- TABLE$Ticker[i]
tryCatch({
getSymbols(symbol, from = date - 1, to = date, auto.assign = TRUE)
# Print message if successful
print(paste("Successfully downloaded data for", symbol))
}, error = function(e) {
# Print a message if there's an error (i.e., symbol not found)
print(paste("Error downloading data for", symbol, ":", e$message))
})
return <- dailyReturn(symbol)
TABLE$DailyReturn[i] <- return
}
}
}
findDailyReturn(today)
